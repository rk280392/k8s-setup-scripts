---
- hosts: all
  become: true
  tasks:
    - name: Install packages that allow apt to be used over https
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
    - name: Install docker and its dependecies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io
        notify:
          - docker status
    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker
    - name: Remove swapfile
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
    - name: Disable Swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Remove swap from fstab
      lineinfile:
        path: /etc/fstab
        regexp: 'swap'
        state: absent
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url : https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
    - name: Install kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
    - name: configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
        create: yes
    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
        enabled: yes
    - name: Remove default containerd /etc/containerd/config.toml
      file:
        path: /etc/containerd/config.toml
        state: absent
    - name: Restart docker and containerd service
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - docker
        - containerd
    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="192.168.57.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16
    - name: Setup kubeconfig for vagrant user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/vagrant/.kube
        - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
        - chown vagrant:vagrant /home/vagrant/.kube/config
 
    - name: Install calico pod network
      become: false
      command: kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
    - name: Install custom resource for calico
      become: false
      command: kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml 
 
    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
 
    - name: Copy join command to a  file
      copy: content="{{ join_command.stdout_lines[0] }}" dest="/home/vagrant/join-command"
    - name: Copy join-command file to local machine
      fetch:
        src: /home/vagrant/join-command
        dest: ./
        flat: yes
 
  handlers:
    - name: docker status
      service: name=docker state=started enabled=yes
